#include <dt-bindings/zmk/matrix_transform.h>

/ {

    chosen {
        zmk,ksacan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
                RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                 RC(5,6) RC(5,7) RC(5,8) RC(5,9) RC(5,10) RC(5,11)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                 RC(6,6) RC(6,7) RC(6,8) RC(6,9) RC(6,10) RC(6,11)
                        RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(7,6) RC(7,7)                 RC(7,9) RC(7,10)
        >;
    };
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "default_kscan";
        diode-direction = "col2row";
        debounce-press-ms = <1>;
        debounce-release-ms = <5>;
        row-gpios   = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                    , <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                    , <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                    , <&xiao_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                    ;
    };
};

&pinctrl {
	spi0_default: spi0_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
				<NRF_PSEL(SPIM_MOSI, 0, 4)>,
				<NRF_PSEL(SPIM_MISO, 0, 8)>;
		};
	};
	spi0_sleep: spi0_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
				<NRF_PSEL(SPIM_MOSI, 0, 4)>,
				<NRF_PSEL(SPIM_MISO, 0, 8)>;
			low-power-enable;
		};
	};	
};

&xiao_spi {
    status = "okay";
    cs-gpios = <&xiao_d 31 GPIO_ACTIVE_LOW>;

    shift_reg: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <2000000>;
        #gpio-cells = <2>;
        reg = <0>;
        label = "4HC595";
        ngpios = <8>;
  };
};

